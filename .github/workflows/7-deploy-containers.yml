# Containers
# Images needs to be public to access to the images
# Container culd allow to run test on container instead of using
# a production environment
# - Data will be available only during the tests
name: 7-Deploy Containers
on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    branches:
      - main
      - dev
env:
  CACHE_KEY: nodes-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest # This machine will just host
    # container: # To use a container
    #   image: node:16
    env: # Using labels from service
      MONGODB_CONNECTION_PROTOCOL: mongodb # Service label
      MONGODB_CLUSTER_ADDRESS: 127.0.0.1:27017 # Service label
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      PORT: 8080
    services: # To use other containers as services (same as Docker compose)
      mongodb:
        image: mongo # Services always inside of images
        ports:
          - 27017:27017
        env: # To set the envs needed to use a container
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
      # another-service:
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Deploying
        run:
          echo "Deploying..."
